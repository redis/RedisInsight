name: âœ… E2E Tests

on:
  pull_request_review:
    types: [submitted]

  workflow_dispatch:
    inputs:
      debug:
        description: Enable SSH Debug (IT and E2E)
        default: false
        type: boolean

permissions:
  actions: read
  contents: read

# Cancel a previous run workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.head.sha || github.ref }}-e2e
  cancel-in-progress: true

jobs:
  gate:
    name: Gate on approval and dedupe
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - name: Check approval and prior successful runs
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            if (context.eventName === 'workflow_dispatch') {
              core.setOutput('should_run', 'true')
              return
            }

            const approved = (context.eventName === 'pull_request_review') &&
                             (context.payload.review?.state?.toLowerCase() === 'approved')

            if (!approved) {
              core.setOutput('should_run', 'false')
              return
            }

            const sha = context.payload.pull_request?.head?.sha
            if (!sha) {
              core.setOutput('should_run', 'true')
              return
            }

            const resp = await github.rest.actions.listWorkflowRuns({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'tests-e2e.yml',
              head_sha: sha,
            })
            const hasSuccess = resp.data.workflow_runs.some(r => r.conclusion === 'success')

            core.setOutput('should_run', hasSuccess ? 'false' : 'true')

  # E2E Docker
  build-docker:
    needs: gate
    if: needs.gate.outputs.should_run == 'true'
    uses: ./.github/workflows/pipeline-build-docker.yml
    secrets: inherit
    with:
      debug: ${{ inputs.debug || false }}
      for_e2e_tests: true

  e2e-docker-tests:
    needs: build-docker
    uses: ./.github/workflows/tests-e2e-docker.yml
    secrets: inherit
    with:
      debug: ${{ inputs.debug || false }}

  tests-e2e-playwright:
    needs: build-docker
    uses: ./.github/workflows/tests-e2e-playwright.yml
    secrets: inherit
    with:
      debug: ${{ inputs.debug || false }}

  # E2E AppImage
  build-appimage:
    needs: gate
    if: needs.gate.outputs.should_run == 'true'
    uses: ./.github/workflows/pipeline-build-linux.yml
    secrets: inherit
    with:
      target: build_linux_appimage_x64
      debug: ${{ inputs.debug || false }}

  e2e-appimage-tests:
    needs: build-appimage
    uses: ./.github/workflows/tests-e2e-appimage.yml
    secrets: inherit
    with:
      debug: ${{ inputs.debug || false }}

  clean:
    uses: ./.github/workflows/clean-deployments.yml
    if: always()
    needs: [e2e-docker-tests, e2e-appimage-tests, tests-e2e-playwright]

  # Remove artifacts from github actions
  remove-artifacts:
    name: Remove artifacts
    needs: [e2e-docker-tests, e2e-appimage-tests, tests-e2e-playwright]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Remove all artifacts
        uses: ./.github/actions/remove-artifacts
