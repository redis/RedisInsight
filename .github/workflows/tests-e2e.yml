name: ✅ E2E Tests
run-name: >
  E2E • ${{ github.event_name == 'pull_request_review'
    && format('PR #{0} {1}', github.event.pull_request.number, github.event.pull_request.title)
    || github.ref_name }} • by ${{ github.actor }}

on:
  pull_request_review:
    types: [submitted]

  workflow_dispatch:
    inputs:
      debug:
        description: Enable SSH Debug (IT and E2E)
        default: false
        type: boolean

permissions:
  actions: read
  contents: read

# Cancel a previous run workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.head.sha || github.ref }}-e2e
  cancel-in-progress: false

jobs:
  approval-dedupe:
    uses: ./.github/workflows/approval-dedupe.yml
    secrets: inherit
    with:
      workflow_filename: tests-e2e.yml
      require_approval: true
      allow_workflow_dispatch: true

  build-docker:
    needs: approval-dedupe
    if: needs.approval-dedupe.outputs.mode == 'run'
    uses: ./.github/workflows/pipeline-build-docker.yml
    secrets: inherit
    with:
      debug: ${{ inputs.debug || false }}
      for_e2e_tests: true

  build-appimage:
    needs: approval-dedupe
    if: needs.approval-dedupe.outputs.mode == 'run'
    uses: ./.github/workflows/pipeline-build-linux.yml
    secrets: inherit
    with:
      target: build_linux_appimage_x64
      debug: ${{ inputs.debug || false }}

  builds-complete:
    needs: [build-docker, build-appimage]
    runs-on: ubuntu-latest
    steps:
      - name: Both builds finished
        run: echo "Docker and AppImage builds completed"

  e2e-docker-tests-smoke:
    name: "E2E: Smoke (Docker)"
    needs: build-docker
    uses: ./.github/workflows/tests-e2e-docker-smoke.yml
    secrets: inherit
    with:
      debug: ${{ inputs.debug || false }}

  e2e-docker-tests-critical-path:
    name: "E2E: Critical Path (Docker)"
    needs: build-docker
    uses: ./.github/workflows/tests-e2e-docker-critical-path.yml
    secrets: inherit
    with:
      debug: ${{ inputs.debug || false }}

  e2e-docker-tests-regression:
    name: "E2E: Regression (Docker)"
    needs: build-docker
    uses: ./.github/workflows/tests-e2e-docker-regression.yml
    secrets: inherit
    with:
      debug: ${{ inputs.debug || false }}

  tests-e2e-playwright:
    needs: builds-complete
    uses: ./.github/workflows/tests-e2e-playwright.yml
    secrets: inherit
    with:
      debug: ${{ inputs.debug || false }}

  e2e-appimage-tests:
    needs: builds-complete
    uses: ./.github/workflows/tests-e2e-appimage.yml
    secrets: inherit
    with:
      debug: ${{ inputs.debug || false }}

  clean:
    uses: ./.github/workflows/clean-deployments.yml
    if: always() && needs.approval-dedupe.outputs.mode == 'run'
    needs:
      [
        approval-dedupe,
        e2e-docker-tests-smoke,
        e2e-docker-tests-critical-path,
        e2e-docker-tests-regression,
        e2e-appimage-tests,
        tests-e2e-playwright,
      ]

  # Remove artifacts from github actions
  remove-artifacts:
    name: Remove artifacts
    if: needs.approval-dedupe.outputs.mode == 'run'
    needs:
      [
        approval-dedupe,
        e2e-docker-tests-smoke,
        e2e-docker-tests-critical-path,
        e2e-docker-tests-regression,
        e2e-appimage-tests,
        tests-e2e-playwright,
      ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Remove all artifacts
        uses: ./.github/actions/remove-artifacts
